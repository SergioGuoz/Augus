Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> in_instrucciones
Rule 2     in_instrucciones -> instruccion instrucciones
Rule 3     instrucciones -> instruccion instrucciones
Rule 4     instrucciones -> <empty>
Rule 5     empty -> <empty>
Rule 6     instruccion -> error
Rule 7     instruccion -> asignacion_heredada
Rule 8     instruccion -> print_instr
Rule 9     instruccion -> goto_instr
Rule 10    instruccion -> unset_instr
Rule 11    instruccion -> exit_instr
Rule 12    instruccion -> def_etiqueta_instr
Rule 13    instruccion -> if_instr
Rule 14    def_etiqueta_instr -> ID DOSPTS
Rule 15    asignacion_heredada -> tipo_variable lista_asignaciones
Rule 16    lista_asignaciones -> IGUAL asignacion_valor
Rule 17    lista_asignaciones -> asignacion_arr_st
Rule 18    asignacion_valor -> expresion PTCOMA
Rule 19    asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA
Rule 20    asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA
Rule 21    asignacion_arr_st -> def_par lista_parametros error PTCOMA
Rule 22    lista_parametros -> def_par lista_parametros
Rule 23    lista_parametros -> <empty>
Rule 24    def_par -> CORIZQ expresion CORDER
Rule 25    tipo_variable -> TEMPVAR
Rule 26    tipo_variable -> PARAM
Rule 27    tipo_variable -> FUNVAL
Rule 28    tipo_variable -> RA
Rule 29    tipo_variable -> STACK
Rule 30    tipo_variable -> SP
Rule 31    print_instr -> PRINT PARIZQ valor PARDER PTCOMA
Rule 32    goto_instr -> GOTO ID PTCOMA
Rule 33    unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA
Rule 34    exit_instr -> EXIT PTCOMA
Rule 35    expresion -> valor expresiones
Rule 36    expresion -> expresion_unaria
Rule 37    expresiones -> MAS valor
Rule 38    expresiones -> MENOS valor
Rule 39    expresiones -> MULTI valor
Rule 40    expresiones -> DIVISION valor
Rule 41    expresiones -> RESIDUO valor
Rule 42    expresiones -> IGUALQUE valor
Rule 43    expresiones -> DISTINTO valor
Rule 44    expresiones -> MAYORIG valor
Rule 45    expresiones -> MENORIG valor
Rule 46    expresiones -> MAYORQUE valor
Rule 47    expresiones -> MENORQUE valor
Rule 48    expresiones -> AND valor
Rule 49    expresiones -> OR valor
Rule 50    expresiones -> XOR valor
Rule 51    expresiones -> ANDBB valor
Rule 52    expresiones -> ORBB valor
Rule 53    expresiones -> XORBB valor
Rule 54    expresiones -> SHIFTIZQ valor
Rule 55    expresiones -> SHIFTDER valor
Rule 56    expresiones -> empty
Rule 57    expresion_unaria -> MENOS valor
Rule 58    expresion_unaria -> NOT valor
Rule 59    expresion_unaria -> NOTBB valor
Rule 60    expresion_unaria -> ANDBB valor
Rule 61    valor -> PARIZQ tipo PARDER valor
Rule 62    tipo -> INT
Rule 63    tipo -> FLOAT
Rule 64    tipo -> CHAR
Rule 65    valor -> ENTERO
Rule 66    valor -> DECIMAL
Rule 67    valor -> CADENA
Rule 68    valor -> CADENADOBLE
Rule 69    valor -> tipo_variable paramsaccess
Rule 70    paramsaccess -> empty
Rule 71    paramsaccess -> def_par lista_parametros
Rule 72    valor -> READ PARIZQ PARDER
Rule 73    valor -> ABS PARIZQ expresion PARDER
Rule 74    if_instr -> IF PARIZQ expresion PARDER goto_instr

Terminals, with rules where they appear

ABS                  : 73
AND                  : 48
ANDBB                : 51 60
ARRAY                : 19
CADENA               : 67
CADENADOBLE          : 68
CHAR                 : 64
CORDER               : 24
CORIZQ               : 24
DECIMAL              : 66
DISTINTO             : 43
DIVISION             : 40
DOSPTS               : 14
ENTERO               : 65
EXIT                 : 34
FLOAT                : 63
FUNVAL               : 27
GOTO                 : 32
ID                   : 14 32
IF                   : 74
IGUAL                : 16 20
IGUALQUE             : 42
INT                  : 62
MAS                  : 37
MAYORIG              : 44
MAYORQUE             : 46
MENORIG              : 45
MENORQUE             : 47
MENOS                : 38 57
MULTI                : 39
NOT                  : 58
NOTBB                : 59
OR                   : 49
ORBB                 : 52
PARAM                : 26
PARDER               : 19 31 33 61 72 73 74
PARIZQ               : 19 31 33 61 72 73 74
PRINT                : 31
PTCOMA               : 18 19 20 21 31 32 33 34
RA                   : 28
READ                 : 72
RESIDUO              : 41
SHIFTDER             : 55
SHIFTIZQ             : 54
SP                   : 30
STACK                : 29
TEMPVAR              : 25
UNSET                : 33
XOR                  : 50
XORBB                : 53
error                : 6 21

Nonterminals, with rules where they appear

asignacion_arr_st    : 17
asignacion_heredada  : 7
asignacion_valor     : 16
def_etiqueta_instr   : 12
def_par              : 20 21 22 71
empty                : 56 70
exit_instr           : 11
expresion            : 18 20 24 73 74
expresion_unaria     : 36
expresiones          : 35
goto_instr           : 9 74
if_instr             : 13
in_instrucciones     : 1
init                 : 0
instruccion          : 2 3
instrucciones        : 2 3
lista_asignaciones   : 15
lista_parametros     : 20 21 22 71
paramsaccess         : 69
print_instr          : 8
tipo                 : 61
tipo_variable        : 15 33 69
unset_instr          : 10
valor                : 31 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 60 61

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . in_instrucciones
    (2) in_instrucciones -> . instruccion instrucciones
    (6) instruccion -> . error
    (7) instruccion -> . asignacion_heredada
    (8) instruccion -> . print_instr
    (9) instruccion -> . goto_instr
    (10) instruccion -> . unset_instr
    (11) instruccion -> . exit_instr
    (12) instruccion -> . def_etiqueta_instr
    (13) instruccion -> . if_instr
    (15) asignacion_heredada -> . tipo_variable lista_asignaciones
    (31) print_instr -> . PRINT PARIZQ valor PARDER PTCOMA
    (32) goto_instr -> . GOTO ID PTCOMA
    (33) unset_instr -> . UNSET PARIZQ tipo_variable PARDER PTCOMA
    (34) exit_instr -> . EXIT PTCOMA
    (14) def_etiqueta_instr -> . ID DOSPTS
    (74) if_instr -> . IF PARIZQ expresion PARDER goto_instr
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    error           shift and go to state 8
    PRINT           shift and go to state 7
    GOTO            shift and go to state 16
    UNSET           shift and go to state 15
    EXIT            shift and go to state 14
    ID              shift and go to state 5
    IF              shift and go to state 11
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    exit_instr                     shift and go to state 13
    goto_instr                     shift and go to state 17
    def_etiqueta_instr             shift and go to state 18
    asignacion_heredada            shift and go to state 4
    in_instrucciones               shift and go to state 19
    print_instr                    shift and go to state 9
    init                           shift and go to state 10
    instruccion                    shift and go to state 20
    tipo_variable                  shift and go to state 22
    if_instr                       shift and go to state 23
    unset_instr                    shift and go to state 24

state 1

    (27) tipo_variable -> FUNVAL .

    CORIZQ          reduce using rule 27 (tipo_variable -> FUNVAL .)
    PARDER          reduce using rule 27 (tipo_variable -> FUNVAL .)
    PTCOMA          reduce using rule 27 (tipo_variable -> FUNVAL .)
    CORDER          reduce using rule 27 (tipo_variable -> FUNVAL .)
    IGUAL           reduce using rule 27 (tipo_variable -> FUNVAL .)
    MAS             reduce using rule 27 (tipo_variable -> FUNVAL .)
    MENOS           reduce using rule 27 (tipo_variable -> FUNVAL .)
    MULTI           reduce using rule 27 (tipo_variable -> FUNVAL .)
    DIVISION        reduce using rule 27 (tipo_variable -> FUNVAL .)
    RESIDUO         reduce using rule 27 (tipo_variable -> FUNVAL .)
    IGUALQUE        reduce using rule 27 (tipo_variable -> FUNVAL .)
    DISTINTO        reduce using rule 27 (tipo_variable -> FUNVAL .)
    MAYORIG         reduce using rule 27 (tipo_variable -> FUNVAL .)
    MENORIG         reduce using rule 27 (tipo_variable -> FUNVAL .)
    MAYORQUE        reduce using rule 27 (tipo_variable -> FUNVAL .)
    MENORQUE        reduce using rule 27 (tipo_variable -> FUNVAL .)
    AND             reduce using rule 27 (tipo_variable -> FUNVAL .)
    OR              reduce using rule 27 (tipo_variable -> FUNVAL .)
    XOR             reduce using rule 27 (tipo_variable -> FUNVAL .)
    ANDBB           reduce using rule 27 (tipo_variable -> FUNVAL .)
    ORBB            reduce using rule 27 (tipo_variable -> FUNVAL .)
    XORBB           reduce using rule 27 (tipo_variable -> FUNVAL .)
    SHIFTIZQ        reduce using rule 27 (tipo_variable -> FUNVAL .)
    SHIFTDER        reduce using rule 27 (tipo_variable -> FUNVAL .)


state 2

    (30) tipo_variable -> SP .

    CORIZQ          reduce using rule 30 (tipo_variable -> SP .)
    PARDER          reduce using rule 30 (tipo_variable -> SP .)
    PTCOMA          reduce using rule 30 (tipo_variable -> SP .)
    CORDER          reduce using rule 30 (tipo_variable -> SP .)
    IGUAL           reduce using rule 30 (tipo_variable -> SP .)
    MAS             reduce using rule 30 (tipo_variable -> SP .)
    MENOS           reduce using rule 30 (tipo_variable -> SP .)
    MULTI           reduce using rule 30 (tipo_variable -> SP .)
    DIVISION        reduce using rule 30 (tipo_variable -> SP .)
    RESIDUO         reduce using rule 30 (tipo_variable -> SP .)
    IGUALQUE        reduce using rule 30 (tipo_variable -> SP .)
    DISTINTO        reduce using rule 30 (tipo_variable -> SP .)
    MAYORIG         reduce using rule 30 (tipo_variable -> SP .)
    MENORIG         reduce using rule 30 (tipo_variable -> SP .)
    MAYORQUE        reduce using rule 30 (tipo_variable -> SP .)
    MENORQUE        reduce using rule 30 (tipo_variable -> SP .)
    AND             reduce using rule 30 (tipo_variable -> SP .)
    OR              reduce using rule 30 (tipo_variable -> SP .)
    XOR             reduce using rule 30 (tipo_variable -> SP .)
    ANDBB           reduce using rule 30 (tipo_variable -> SP .)
    ORBB            reduce using rule 30 (tipo_variable -> SP .)
    XORBB           reduce using rule 30 (tipo_variable -> SP .)
    SHIFTIZQ        reduce using rule 30 (tipo_variable -> SP .)
    SHIFTDER        reduce using rule 30 (tipo_variable -> SP .)


state 3

    (28) tipo_variable -> RA .

    CORIZQ          reduce using rule 28 (tipo_variable -> RA .)
    PARDER          reduce using rule 28 (tipo_variable -> RA .)
    PTCOMA          reduce using rule 28 (tipo_variable -> RA .)
    CORDER          reduce using rule 28 (tipo_variable -> RA .)
    IGUAL           reduce using rule 28 (tipo_variable -> RA .)
    MAS             reduce using rule 28 (tipo_variable -> RA .)
    MENOS           reduce using rule 28 (tipo_variable -> RA .)
    MULTI           reduce using rule 28 (tipo_variable -> RA .)
    DIVISION        reduce using rule 28 (tipo_variable -> RA .)
    RESIDUO         reduce using rule 28 (tipo_variable -> RA .)
    IGUALQUE        reduce using rule 28 (tipo_variable -> RA .)
    DISTINTO        reduce using rule 28 (tipo_variable -> RA .)
    MAYORIG         reduce using rule 28 (tipo_variable -> RA .)
    MENORIG         reduce using rule 28 (tipo_variable -> RA .)
    MAYORQUE        reduce using rule 28 (tipo_variable -> RA .)
    MENORQUE        reduce using rule 28 (tipo_variable -> RA .)
    AND             reduce using rule 28 (tipo_variable -> RA .)
    OR              reduce using rule 28 (tipo_variable -> RA .)
    XOR             reduce using rule 28 (tipo_variable -> RA .)
    ANDBB           reduce using rule 28 (tipo_variable -> RA .)
    ORBB            reduce using rule 28 (tipo_variable -> RA .)
    XORBB           reduce using rule 28 (tipo_variable -> RA .)
    SHIFTIZQ        reduce using rule 28 (tipo_variable -> RA .)
    SHIFTDER        reduce using rule 28 (tipo_variable -> RA .)


state 4

    (7) instruccion -> asignacion_heredada .

    error           reduce using rule 7 (instruccion -> asignacion_heredada .)
    PRINT           reduce using rule 7 (instruccion -> asignacion_heredada .)
    GOTO            reduce using rule 7 (instruccion -> asignacion_heredada .)
    UNSET           reduce using rule 7 (instruccion -> asignacion_heredada .)
    EXIT            reduce using rule 7 (instruccion -> asignacion_heredada .)
    ID              reduce using rule 7 (instruccion -> asignacion_heredada .)
    IF              reduce using rule 7 (instruccion -> asignacion_heredada .)
    TEMPVAR         reduce using rule 7 (instruccion -> asignacion_heredada .)
    PARAM           reduce using rule 7 (instruccion -> asignacion_heredada .)
    FUNVAL          reduce using rule 7 (instruccion -> asignacion_heredada .)
    RA              reduce using rule 7 (instruccion -> asignacion_heredada .)
    STACK           reduce using rule 7 (instruccion -> asignacion_heredada .)
    SP              reduce using rule 7 (instruccion -> asignacion_heredada .)
    $end            reduce using rule 7 (instruccion -> asignacion_heredada .)


state 5

    (14) def_etiqueta_instr -> ID . DOSPTS

    DOSPTS          shift and go to state 25


state 6

    (26) tipo_variable -> PARAM .

    CORIZQ          reduce using rule 26 (tipo_variable -> PARAM .)
    PARDER          reduce using rule 26 (tipo_variable -> PARAM .)
    PTCOMA          reduce using rule 26 (tipo_variable -> PARAM .)
    CORDER          reduce using rule 26 (tipo_variable -> PARAM .)
    IGUAL           reduce using rule 26 (tipo_variable -> PARAM .)
    MAS             reduce using rule 26 (tipo_variable -> PARAM .)
    MENOS           reduce using rule 26 (tipo_variable -> PARAM .)
    MULTI           reduce using rule 26 (tipo_variable -> PARAM .)
    DIVISION        reduce using rule 26 (tipo_variable -> PARAM .)
    RESIDUO         reduce using rule 26 (tipo_variable -> PARAM .)
    IGUALQUE        reduce using rule 26 (tipo_variable -> PARAM .)
    DISTINTO        reduce using rule 26 (tipo_variable -> PARAM .)
    MAYORIG         reduce using rule 26 (tipo_variable -> PARAM .)
    MENORIG         reduce using rule 26 (tipo_variable -> PARAM .)
    MAYORQUE        reduce using rule 26 (tipo_variable -> PARAM .)
    MENORQUE        reduce using rule 26 (tipo_variable -> PARAM .)
    AND             reduce using rule 26 (tipo_variable -> PARAM .)
    OR              reduce using rule 26 (tipo_variable -> PARAM .)
    XOR             reduce using rule 26 (tipo_variable -> PARAM .)
    ANDBB           reduce using rule 26 (tipo_variable -> PARAM .)
    ORBB            reduce using rule 26 (tipo_variable -> PARAM .)
    XORBB           reduce using rule 26 (tipo_variable -> PARAM .)
    SHIFTIZQ        reduce using rule 26 (tipo_variable -> PARAM .)
    SHIFTDER        reduce using rule 26 (tipo_variable -> PARAM .)


state 7

    (31) print_instr -> PRINT . PARIZQ valor PARDER PTCOMA

    PARIZQ          shift and go to state 26


state 8

    (6) instruccion -> error .

    error           reduce using rule 6 (instruccion -> error .)
    PRINT           reduce using rule 6 (instruccion -> error .)
    GOTO            reduce using rule 6 (instruccion -> error .)
    UNSET           reduce using rule 6 (instruccion -> error .)
    EXIT            reduce using rule 6 (instruccion -> error .)
    ID              reduce using rule 6 (instruccion -> error .)
    IF              reduce using rule 6 (instruccion -> error .)
    TEMPVAR         reduce using rule 6 (instruccion -> error .)
    PARAM           reduce using rule 6 (instruccion -> error .)
    FUNVAL          reduce using rule 6 (instruccion -> error .)
    RA              reduce using rule 6 (instruccion -> error .)
    STACK           reduce using rule 6 (instruccion -> error .)
    SP              reduce using rule 6 (instruccion -> error .)
    $end            reduce using rule 6 (instruccion -> error .)


state 9

    (8) instruccion -> print_instr .

    error           reduce using rule 8 (instruccion -> print_instr .)
    PRINT           reduce using rule 8 (instruccion -> print_instr .)
    GOTO            reduce using rule 8 (instruccion -> print_instr .)
    UNSET           reduce using rule 8 (instruccion -> print_instr .)
    EXIT            reduce using rule 8 (instruccion -> print_instr .)
    ID              reduce using rule 8 (instruccion -> print_instr .)
    IF              reduce using rule 8 (instruccion -> print_instr .)
    TEMPVAR         reduce using rule 8 (instruccion -> print_instr .)
    PARAM           reduce using rule 8 (instruccion -> print_instr .)
    FUNVAL          reduce using rule 8 (instruccion -> print_instr .)
    RA              reduce using rule 8 (instruccion -> print_instr .)
    STACK           reduce using rule 8 (instruccion -> print_instr .)
    SP              reduce using rule 8 (instruccion -> print_instr .)
    $end            reduce using rule 8 (instruccion -> print_instr .)


state 10

    (0) S' -> init .



state 11

    (74) if_instr -> IF . PARIZQ expresion PARDER goto_instr

    PARIZQ          shift and go to state 27


state 12

    (25) tipo_variable -> TEMPVAR .

    CORIZQ          reduce using rule 25 (tipo_variable -> TEMPVAR .)
    PARDER          reduce using rule 25 (tipo_variable -> TEMPVAR .)
    PTCOMA          reduce using rule 25 (tipo_variable -> TEMPVAR .)
    CORDER          reduce using rule 25 (tipo_variable -> TEMPVAR .)
    IGUAL           reduce using rule 25 (tipo_variable -> TEMPVAR .)
    MAS             reduce using rule 25 (tipo_variable -> TEMPVAR .)
    MENOS           reduce using rule 25 (tipo_variable -> TEMPVAR .)
    MULTI           reduce using rule 25 (tipo_variable -> TEMPVAR .)
    DIVISION        reduce using rule 25 (tipo_variable -> TEMPVAR .)
    RESIDUO         reduce using rule 25 (tipo_variable -> TEMPVAR .)
    IGUALQUE        reduce using rule 25 (tipo_variable -> TEMPVAR .)
    DISTINTO        reduce using rule 25 (tipo_variable -> TEMPVAR .)
    MAYORIG         reduce using rule 25 (tipo_variable -> TEMPVAR .)
    MENORIG         reduce using rule 25 (tipo_variable -> TEMPVAR .)
    MAYORQUE        reduce using rule 25 (tipo_variable -> TEMPVAR .)
    MENORQUE        reduce using rule 25 (tipo_variable -> TEMPVAR .)
    AND             reduce using rule 25 (tipo_variable -> TEMPVAR .)
    OR              reduce using rule 25 (tipo_variable -> TEMPVAR .)
    XOR             reduce using rule 25 (tipo_variable -> TEMPVAR .)
    ANDBB           reduce using rule 25 (tipo_variable -> TEMPVAR .)
    ORBB            reduce using rule 25 (tipo_variable -> TEMPVAR .)
    XORBB           reduce using rule 25 (tipo_variable -> TEMPVAR .)
    SHIFTIZQ        reduce using rule 25 (tipo_variable -> TEMPVAR .)
    SHIFTDER        reduce using rule 25 (tipo_variable -> TEMPVAR .)


state 13

    (11) instruccion -> exit_instr .

    error           reduce using rule 11 (instruccion -> exit_instr .)
    PRINT           reduce using rule 11 (instruccion -> exit_instr .)
    GOTO            reduce using rule 11 (instruccion -> exit_instr .)
    UNSET           reduce using rule 11 (instruccion -> exit_instr .)
    EXIT            reduce using rule 11 (instruccion -> exit_instr .)
    ID              reduce using rule 11 (instruccion -> exit_instr .)
    IF              reduce using rule 11 (instruccion -> exit_instr .)
    TEMPVAR         reduce using rule 11 (instruccion -> exit_instr .)
    PARAM           reduce using rule 11 (instruccion -> exit_instr .)
    FUNVAL          reduce using rule 11 (instruccion -> exit_instr .)
    RA              reduce using rule 11 (instruccion -> exit_instr .)
    STACK           reduce using rule 11 (instruccion -> exit_instr .)
    SP              reduce using rule 11 (instruccion -> exit_instr .)
    $end            reduce using rule 11 (instruccion -> exit_instr .)


state 14

    (34) exit_instr -> EXIT . PTCOMA

    PTCOMA          shift and go to state 28


state 15

    (33) unset_instr -> UNSET . PARIZQ tipo_variable PARDER PTCOMA

    PARIZQ          shift and go to state 29


state 16

    (32) goto_instr -> GOTO . ID PTCOMA

    ID              shift and go to state 30


state 17

    (9) instruccion -> goto_instr .

    error           reduce using rule 9 (instruccion -> goto_instr .)
    PRINT           reduce using rule 9 (instruccion -> goto_instr .)
    GOTO            reduce using rule 9 (instruccion -> goto_instr .)
    UNSET           reduce using rule 9 (instruccion -> goto_instr .)
    EXIT            reduce using rule 9 (instruccion -> goto_instr .)
    ID              reduce using rule 9 (instruccion -> goto_instr .)
    IF              reduce using rule 9 (instruccion -> goto_instr .)
    TEMPVAR         reduce using rule 9 (instruccion -> goto_instr .)
    PARAM           reduce using rule 9 (instruccion -> goto_instr .)
    FUNVAL          reduce using rule 9 (instruccion -> goto_instr .)
    RA              reduce using rule 9 (instruccion -> goto_instr .)
    STACK           reduce using rule 9 (instruccion -> goto_instr .)
    SP              reduce using rule 9 (instruccion -> goto_instr .)
    $end            reduce using rule 9 (instruccion -> goto_instr .)


state 18

    (12) instruccion -> def_etiqueta_instr .

    error           reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    PRINT           reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    GOTO            reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    UNSET           reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    EXIT            reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    ID              reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    IF              reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    TEMPVAR         reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    PARAM           reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    FUNVAL          reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    RA              reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    STACK           reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    SP              reduce using rule 12 (instruccion -> def_etiqueta_instr .)
    $end            reduce using rule 12 (instruccion -> def_etiqueta_instr .)


state 19

    (1) init -> in_instrucciones .

    $end            reduce using rule 1 (init -> in_instrucciones .)


state 20

    (2) in_instrucciones -> instruccion . instrucciones
    (3) instrucciones -> . instruccion instrucciones
    (4) instrucciones -> .
    (6) instruccion -> . error
    (7) instruccion -> . asignacion_heredada
    (8) instruccion -> . print_instr
    (9) instruccion -> . goto_instr
    (10) instruccion -> . unset_instr
    (11) instruccion -> . exit_instr
    (12) instruccion -> . def_etiqueta_instr
    (13) instruccion -> . if_instr
    (15) asignacion_heredada -> . tipo_variable lista_asignaciones
    (31) print_instr -> . PRINT PARIZQ valor PARDER PTCOMA
    (32) goto_instr -> . GOTO ID PTCOMA
    (33) unset_instr -> . UNSET PARIZQ tipo_variable PARDER PTCOMA
    (34) exit_instr -> . EXIT PTCOMA
    (14) def_etiqueta_instr -> . ID DOSPTS
    (74) if_instr -> . IF PARIZQ expresion PARDER goto_instr
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    $end            reduce using rule 4 (instrucciones -> .)
    error           shift and go to state 8
    PRINT           shift and go to state 7
    GOTO            shift and go to state 16
    UNSET           shift and go to state 15
    EXIT            shift and go to state 14
    ID              shift and go to state 5
    IF              shift and go to state 11
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    instrucciones                  shift and go to state 31
    exit_instr                     shift and go to state 13
    goto_instr                     shift and go to state 17
    def_etiqueta_instr             shift and go to state 18
    asignacion_heredada            shift and go to state 4
    print_instr                    shift and go to state 9
    instruccion                    shift and go to state 32
    tipo_variable                  shift and go to state 22
    if_instr                       shift and go to state 23
    unset_instr                    shift and go to state 24

state 21

    (29) tipo_variable -> STACK .

    CORIZQ          reduce using rule 29 (tipo_variable -> STACK .)
    PARDER          reduce using rule 29 (tipo_variable -> STACK .)
    PTCOMA          reduce using rule 29 (tipo_variable -> STACK .)
    CORDER          reduce using rule 29 (tipo_variable -> STACK .)
    IGUAL           reduce using rule 29 (tipo_variable -> STACK .)
    MAS             reduce using rule 29 (tipo_variable -> STACK .)
    MENOS           reduce using rule 29 (tipo_variable -> STACK .)
    MULTI           reduce using rule 29 (tipo_variable -> STACK .)
    DIVISION        reduce using rule 29 (tipo_variable -> STACK .)
    RESIDUO         reduce using rule 29 (tipo_variable -> STACK .)
    IGUALQUE        reduce using rule 29 (tipo_variable -> STACK .)
    DISTINTO        reduce using rule 29 (tipo_variable -> STACK .)
    MAYORIG         reduce using rule 29 (tipo_variable -> STACK .)
    MENORIG         reduce using rule 29 (tipo_variable -> STACK .)
    MAYORQUE        reduce using rule 29 (tipo_variable -> STACK .)
    MENORQUE        reduce using rule 29 (tipo_variable -> STACK .)
    AND             reduce using rule 29 (tipo_variable -> STACK .)
    OR              reduce using rule 29 (tipo_variable -> STACK .)
    XOR             reduce using rule 29 (tipo_variable -> STACK .)
    ANDBB           reduce using rule 29 (tipo_variable -> STACK .)
    ORBB            reduce using rule 29 (tipo_variable -> STACK .)
    XORBB           reduce using rule 29 (tipo_variable -> STACK .)
    SHIFTIZQ        reduce using rule 29 (tipo_variable -> STACK .)
    SHIFTDER        reduce using rule 29 (tipo_variable -> STACK .)


state 22

    (15) asignacion_heredada -> tipo_variable . lista_asignaciones
    (16) lista_asignaciones -> . IGUAL asignacion_valor
    (17) lista_asignaciones -> . asignacion_arr_st
    (20) asignacion_arr_st -> . def_par lista_parametros IGUAL expresion PTCOMA
    (21) asignacion_arr_st -> . def_par lista_parametros error PTCOMA
    (24) def_par -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 34
    CORIZQ          shift and go to state 36

    lista_asignaciones             shift and go to state 37
    def_par                        shift and go to state 35
    asignacion_arr_st              shift and go to state 33

state 23

    (13) instruccion -> if_instr .

    error           reduce using rule 13 (instruccion -> if_instr .)
    PRINT           reduce using rule 13 (instruccion -> if_instr .)
    GOTO            reduce using rule 13 (instruccion -> if_instr .)
    UNSET           reduce using rule 13 (instruccion -> if_instr .)
    EXIT            reduce using rule 13 (instruccion -> if_instr .)
    ID              reduce using rule 13 (instruccion -> if_instr .)
    IF              reduce using rule 13 (instruccion -> if_instr .)
    TEMPVAR         reduce using rule 13 (instruccion -> if_instr .)
    PARAM           reduce using rule 13 (instruccion -> if_instr .)
    FUNVAL          reduce using rule 13 (instruccion -> if_instr .)
    RA              reduce using rule 13 (instruccion -> if_instr .)
    STACK           reduce using rule 13 (instruccion -> if_instr .)
    SP              reduce using rule 13 (instruccion -> if_instr .)
    $end            reduce using rule 13 (instruccion -> if_instr .)


state 24

    (10) instruccion -> unset_instr .

    error           reduce using rule 10 (instruccion -> unset_instr .)
    PRINT           reduce using rule 10 (instruccion -> unset_instr .)
    GOTO            reduce using rule 10 (instruccion -> unset_instr .)
    UNSET           reduce using rule 10 (instruccion -> unset_instr .)
    EXIT            reduce using rule 10 (instruccion -> unset_instr .)
    ID              reduce using rule 10 (instruccion -> unset_instr .)
    IF              reduce using rule 10 (instruccion -> unset_instr .)
    TEMPVAR         reduce using rule 10 (instruccion -> unset_instr .)
    PARAM           reduce using rule 10 (instruccion -> unset_instr .)
    FUNVAL          reduce using rule 10 (instruccion -> unset_instr .)
    RA              reduce using rule 10 (instruccion -> unset_instr .)
    STACK           reduce using rule 10 (instruccion -> unset_instr .)
    SP              reduce using rule 10 (instruccion -> unset_instr .)
    $end            reduce using rule 10 (instruccion -> unset_instr .)


state 25

    (14) def_etiqueta_instr -> ID DOSPTS .

    error           reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    PRINT           reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    GOTO            reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    UNSET           reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    EXIT            reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    ID              reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    IF              reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    TEMPVAR         reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    PARAM           reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    FUNVAL          reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    RA              reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    STACK           reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    SP              reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)
    $end            reduce using rule 14 (def_etiqueta_instr -> ID DOSPTS .)


state 26

    (31) print_instr -> PRINT PARIZQ . valor PARDER PTCOMA
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 46

state 27

    (74) if_instr -> IF PARIZQ . expresion PARDER goto_instr
    (35) expresion -> . valor expresiones
    (36) expresion -> . expresion_unaria
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (57) expresion_unaria -> . MENOS valor
    (58) expresion_unaria -> . NOT valor
    (59) expresion_unaria -> . NOTBB valor
    (60) expresion_unaria -> . ANDBB valor
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    MENOS           shift and go to state 51
    NOT             shift and go to state 53
    NOTBB           shift and go to state 48
    ANDBB           shift and go to state 52
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    expresion_unaria               shift and go to state 50
    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 49
    expresion                      shift and go to state 47

state 28

    (34) exit_instr -> EXIT PTCOMA .

    error           reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    PRINT           reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    GOTO            reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    UNSET           reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    EXIT            reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    ID              reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    IF              reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    TEMPVAR         reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    PARAM           reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    FUNVAL          reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    RA              reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    STACK           reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    SP              reduce using rule 34 (exit_instr -> EXIT PTCOMA .)
    $end            reduce using rule 34 (exit_instr -> EXIT PTCOMA .)


state 29

    (33) unset_instr -> UNSET PARIZQ . tipo_variable PARDER PTCOMA
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 54

state 30

    (32) goto_instr -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 55


state 31

    (2) in_instrucciones -> instruccion instrucciones .

    $end            reduce using rule 2 (in_instrucciones -> instruccion instrucciones .)


state 32

    (3) instrucciones -> instruccion . instrucciones
    (3) instrucciones -> . instruccion instrucciones
    (4) instrucciones -> .
    (6) instruccion -> . error
    (7) instruccion -> . asignacion_heredada
    (8) instruccion -> . print_instr
    (9) instruccion -> . goto_instr
    (10) instruccion -> . unset_instr
    (11) instruccion -> . exit_instr
    (12) instruccion -> . def_etiqueta_instr
    (13) instruccion -> . if_instr
    (15) asignacion_heredada -> . tipo_variable lista_asignaciones
    (31) print_instr -> . PRINT PARIZQ valor PARDER PTCOMA
    (32) goto_instr -> . GOTO ID PTCOMA
    (33) unset_instr -> . UNSET PARIZQ tipo_variable PARDER PTCOMA
    (34) exit_instr -> . EXIT PTCOMA
    (14) def_etiqueta_instr -> . ID DOSPTS
    (74) if_instr -> . IF PARIZQ expresion PARDER goto_instr
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    $end            reduce using rule 4 (instrucciones -> .)
    error           shift and go to state 8
    PRINT           shift and go to state 7
    GOTO            shift and go to state 16
    UNSET           shift and go to state 15
    EXIT            shift and go to state 14
    ID              shift and go to state 5
    IF              shift and go to state 11
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    instrucciones                  shift and go to state 56
    exit_instr                     shift and go to state 13
    goto_instr                     shift and go to state 17
    def_etiqueta_instr             shift and go to state 18
    asignacion_heredada            shift and go to state 4
    print_instr                    shift and go to state 9
    instruccion                    shift and go to state 32
    tipo_variable                  shift and go to state 22
    if_instr                       shift and go to state 23
    unset_instr                    shift and go to state 24

state 33

    (17) lista_asignaciones -> asignacion_arr_st .

    error           reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    PRINT           reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    GOTO            reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    UNSET           reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    EXIT            reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    ID              reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    IF              reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    TEMPVAR         reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    PARAM           reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    FUNVAL          reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    RA              reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    STACK           reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    SP              reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)
    $end            reduce using rule 17 (lista_asignaciones -> asignacion_arr_st .)


state 34

    (16) lista_asignaciones -> IGUAL . asignacion_valor
    (18) asignacion_valor -> . expresion PTCOMA
    (19) asignacion_valor -> . ARRAY PARIZQ PARDER PTCOMA
    (35) expresion -> . valor expresiones
    (36) expresion -> . expresion_unaria
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (57) expresion_unaria -> . MENOS valor
    (58) expresion_unaria -> . NOT valor
    (59) expresion_unaria -> . NOTBB valor
    (60) expresion_unaria -> . ANDBB valor
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    ARRAY           shift and go to state 59
    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    MENOS           shift and go to state 51
    NOT             shift and go to state 53
    NOTBB           shift and go to state 48
    ANDBB           shift and go to state 52
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    asignacion_valor               shift and go to state 57
    expresion_unaria               shift and go to state 50
    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 49
    expresion                      shift and go to state 58

state 35

    (20) asignacion_arr_st -> def_par . lista_parametros IGUAL expresion PTCOMA
    (21) asignacion_arr_st -> def_par . lista_parametros error PTCOMA
    (22) lista_parametros -> . def_par lista_parametros
    (23) lista_parametros -> .
    (24) def_par -> . CORIZQ expresion CORDER

    IGUAL           reduce using rule 23 (lista_parametros -> .)
    error           reduce using rule 23 (lista_parametros -> .)
    CORIZQ          shift and go to state 36

    def_par                        shift and go to state 61
    lista_parametros               shift and go to state 60

state 36

    (24) def_par -> CORIZQ . expresion CORDER
    (35) expresion -> . valor expresiones
    (36) expresion -> . expresion_unaria
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (57) expresion_unaria -> . MENOS valor
    (58) expresion_unaria -> . NOT valor
    (59) expresion_unaria -> . NOTBB valor
    (60) expresion_unaria -> . ANDBB valor
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    MENOS           shift and go to state 51
    NOT             shift and go to state 53
    NOTBB           shift and go to state 48
    ANDBB           shift and go to state 52
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    expresion_unaria               shift and go to state 50
    tipo_variable                  shift and go to state 44
    expresion                      shift and go to state 62
    valor                          shift and go to state 49

state 37

    (15) asignacion_heredada -> tipo_variable lista_asignaciones .

    error           reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    PRINT           reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    GOTO            reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    UNSET           reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    EXIT            reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    ID              reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    IF              reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    TEMPVAR         reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    PARAM           reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    FUNVAL          reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    RA              reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    STACK           reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    SP              reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)
    $end            reduce using rule 15 (asignacion_heredada -> tipo_variable lista_asignaciones .)


state 38

    (73) valor -> ABS . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 63


state 39

    (68) valor -> CADENADOBLE .

    MAS             reduce using rule 68 (valor -> CADENADOBLE .)
    MENOS           reduce using rule 68 (valor -> CADENADOBLE .)
    MULTI           reduce using rule 68 (valor -> CADENADOBLE .)
    DIVISION        reduce using rule 68 (valor -> CADENADOBLE .)
    RESIDUO         reduce using rule 68 (valor -> CADENADOBLE .)
    IGUALQUE        reduce using rule 68 (valor -> CADENADOBLE .)
    DISTINTO        reduce using rule 68 (valor -> CADENADOBLE .)
    MAYORIG         reduce using rule 68 (valor -> CADENADOBLE .)
    MENORIG         reduce using rule 68 (valor -> CADENADOBLE .)
    MAYORQUE        reduce using rule 68 (valor -> CADENADOBLE .)
    MENORQUE        reduce using rule 68 (valor -> CADENADOBLE .)
    AND             reduce using rule 68 (valor -> CADENADOBLE .)
    OR              reduce using rule 68 (valor -> CADENADOBLE .)
    XOR             reduce using rule 68 (valor -> CADENADOBLE .)
    ANDBB           reduce using rule 68 (valor -> CADENADOBLE .)
    ORBB            reduce using rule 68 (valor -> CADENADOBLE .)
    XORBB           reduce using rule 68 (valor -> CADENADOBLE .)
    SHIFTIZQ        reduce using rule 68 (valor -> CADENADOBLE .)
    SHIFTDER        reduce using rule 68 (valor -> CADENADOBLE .)
    CORDER          reduce using rule 68 (valor -> CADENADOBLE .)
    PARDER          reduce using rule 68 (valor -> CADENADOBLE .)
    PTCOMA          reduce using rule 68 (valor -> CADENADOBLE .)


state 40

    (66) valor -> DECIMAL .

    MAS             reduce using rule 66 (valor -> DECIMAL .)
    MENOS           reduce using rule 66 (valor -> DECIMAL .)
    MULTI           reduce using rule 66 (valor -> DECIMAL .)
    DIVISION        reduce using rule 66 (valor -> DECIMAL .)
    RESIDUO         reduce using rule 66 (valor -> DECIMAL .)
    IGUALQUE        reduce using rule 66 (valor -> DECIMAL .)
    DISTINTO        reduce using rule 66 (valor -> DECIMAL .)
    MAYORIG         reduce using rule 66 (valor -> DECIMAL .)
    MENORIG         reduce using rule 66 (valor -> DECIMAL .)
    MAYORQUE        reduce using rule 66 (valor -> DECIMAL .)
    MENORQUE        reduce using rule 66 (valor -> DECIMAL .)
    AND             reduce using rule 66 (valor -> DECIMAL .)
    OR              reduce using rule 66 (valor -> DECIMAL .)
    XOR             reduce using rule 66 (valor -> DECIMAL .)
    ANDBB           reduce using rule 66 (valor -> DECIMAL .)
    ORBB            reduce using rule 66 (valor -> DECIMAL .)
    XORBB           reduce using rule 66 (valor -> DECIMAL .)
    SHIFTIZQ        reduce using rule 66 (valor -> DECIMAL .)
    SHIFTDER        reduce using rule 66 (valor -> DECIMAL .)
    CORDER          reduce using rule 66 (valor -> DECIMAL .)
    PARDER          reduce using rule 66 (valor -> DECIMAL .)
    PTCOMA          reduce using rule 66 (valor -> DECIMAL .)


state 41

    (65) valor -> ENTERO .

    MAS             reduce using rule 65 (valor -> ENTERO .)
    MENOS           reduce using rule 65 (valor -> ENTERO .)
    MULTI           reduce using rule 65 (valor -> ENTERO .)
    DIVISION        reduce using rule 65 (valor -> ENTERO .)
    RESIDUO         reduce using rule 65 (valor -> ENTERO .)
    IGUALQUE        reduce using rule 65 (valor -> ENTERO .)
    DISTINTO        reduce using rule 65 (valor -> ENTERO .)
    MAYORIG         reduce using rule 65 (valor -> ENTERO .)
    MENORIG         reduce using rule 65 (valor -> ENTERO .)
    MAYORQUE        reduce using rule 65 (valor -> ENTERO .)
    MENORQUE        reduce using rule 65 (valor -> ENTERO .)
    AND             reduce using rule 65 (valor -> ENTERO .)
    OR              reduce using rule 65 (valor -> ENTERO .)
    XOR             reduce using rule 65 (valor -> ENTERO .)
    ANDBB           reduce using rule 65 (valor -> ENTERO .)
    ORBB            reduce using rule 65 (valor -> ENTERO .)
    XORBB           reduce using rule 65 (valor -> ENTERO .)
    SHIFTIZQ        reduce using rule 65 (valor -> ENTERO .)
    SHIFTDER        reduce using rule 65 (valor -> ENTERO .)
    CORDER          reduce using rule 65 (valor -> ENTERO .)
    PARDER          reduce using rule 65 (valor -> ENTERO .)
    PTCOMA          reduce using rule 65 (valor -> ENTERO .)


state 42

    (72) valor -> READ . PARIZQ PARDER

    PARIZQ          shift and go to state 64


state 43

    (61) valor -> PARIZQ . tipo PARDER valor
    (62) tipo -> . INT
    (63) tipo -> . FLOAT
    (64) tipo -> . CHAR

    INT             shift and go to state 65
    FLOAT           shift and go to state 67
    CHAR            shift and go to state 68

    tipo                           shift and go to state 66

state 44

    (69) valor -> tipo_variable . paramsaccess
    (70) paramsaccess -> . empty
    (71) paramsaccess -> . def_par lista_parametros
    (5) empty -> .
    (24) def_par -> . CORIZQ expresion CORDER

    PARDER          reduce using rule 5 (empty -> .)
    MAS             reduce using rule 5 (empty -> .)
    MENOS           reduce using rule 5 (empty -> .)
    MULTI           reduce using rule 5 (empty -> .)
    DIVISION        reduce using rule 5 (empty -> .)
    RESIDUO         reduce using rule 5 (empty -> .)
    IGUALQUE        reduce using rule 5 (empty -> .)
    DISTINTO        reduce using rule 5 (empty -> .)
    MAYORIG         reduce using rule 5 (empty -> .)
    MENORIG         reduce using rule 5 (empty -> .)
    MAYORQUE        reduce using rule 5 (empty -> .)
    MENORQUE        reduce using rule 5 (empty -> .)
    AND             reduce using rule 5 (empty -> .)
    OR              reduce using rule 5 (empty -> .)
    XOR             reduce using rule 5 (empty -> .)
    ANDBB           reduce using rule 5 (empty -> .)
    ORBB            reduce using rule 5 (empty -> .)
    XORBB           reduce using rule 5 (empty -> .)
    SHIFTIZQ        reduce using rule 5 (empty -> .)
    SHIFTDER        reduce using rule 5 (empty -> .)
    PTCOMA          reduce using rule 5 (empty -> .)
    CORDER          reduce using rule 5 (empty -> .)
    CORIZQ          shift and go to state 36

    paramsaccess                   shift and go to state 69
    empty                          shift and go to state 70
    def_par                        shift and go to state 71

state 45

    (67) valor -> CADENA .

    MAS             reduce using rule 67 (valor -> CADENA .)
    MENOS           reduce using rule 67 (valor -> CADENA .)
    MULTI           reduce using rule 67 (valor -> CADENA .)
    DIVISION        reduce using rule 67 (valor -> CADENA .)
    RESIDUO         reduce using rule 67 (valor -> CADENA .)
    IGUALQUE        reduce using rule 67 (valor -> CADENA .)
    DISTINTO        reduce using rule 67 (valor -> CADENA .)
    MAYORIG         reduce using rule 67 (valor -> CADENA .)
    MENORIG         reduce using rule 67 (valor -> CADENA .)
    MAYORQUE        reduce using rule 67 (valor -> CADENA .)
    MENORQUE        reduce using rule 67 (valor -> CADENA .)
    AND             reduce using rule 67 (valor -> CADENA .)
    OR              reduce using rule 67 (valor -> CADENA .)
    XOR             reduce using rule 67 (valor -> CADENA .)
    ANDBB           reduce using rule 67 (valor -> CADENA .)
    ORBB            reduce using rule 67 (valor -> CADENA .)
    XORBB           reduce using rule 67 (valor -> CADENA .)
    SHIFTIZQ        reduce using rule 67 (valor -> CADENA .)
    SHIFTDER        reduce using rule 67 (valor -> CADENA .)
    CORDER          reduce using rule 67 (valor -> CADENA .)
    PARDER          reduce using rule 67 (valor -> CADENA .)
    PTCOMA          reduce using rule 67 (valor -> CADENA .)


state 46

    (31) print_instr -> PRINT PARIZQ valor . PARDER PTCOMA

    PARDER          shift and go to state 72


state 47

    (74) if_instr -> IF PARIZQ expresion . PARDER goto_instr

    PARDER          shift and go to state 73


state 48

    (59) expresion_unaria -> NOTBB . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 74

state 49

    (35) expresion -> valor . expresiones
    (37) expresiones -> . MAS valor
    (38) expresiones -> . MENOS valor
    (39) expresiones -> . MULTI valor
    (40) expresiones -> . DIVISION valor
    (41) expresiones -> . RESIDUO valor
    (42) expresiones -> . IGUALQUE valor
    (43) expresiones -> . DISTINTO valor
    (44) expresiones -> . MAYORIG valor
    (45) expresiones -> . MENORIG valor
    (46) expresiones -> . MAYORQUE valor
    (47) expresiones -> . MENORQUE valor
    (48) expresiones -> . AND valor
    (49) expresiones -> . OR valor
    (50) expresiones -> . XOR valor
    (51) expresiones -> . ANDBB valor
    (52) expresiones -> . ORBB valor
    (53) expresiones -> . XORBB valor
    (54) expresiones -> . SHIFTIZQ valor
    (55) expresiones -> . SHIFTDER valor
    (56) expresiones -> . empty
    (5) empty -> .

    MAS             shift and go to state 82
    MENOS           shift and go to state 92
    MULTI           shift and go to state 76
    DIVISION        shift and go to state 95
    RESIDUO         shift and go to state 77
    IGUALQUE        shift and go to state 83
    DISTINTO        shift and go to state 80
    MAYORIG         shift and go to state 89
    MENORIG         shift and go to state 88
    MAYORQUE        shift and go to state 86
    MENORQUE        shift and go to state 93
    AND             shift and go to state 79
    OR              shift and go to state 90
    XOR             shift and go to state 91
    ANDBB           shift and go to state 94
    ORBB            shift and go to state 81
    XORBB           shift and go to state 75
    SHIFTIZQ        shift and go to state 84
    SHIFTDER        shift and go to state 78
    PARDER          reduce using rule 5 (empty -> .)
    PTCOMA          reduce using rule 5 (empty -> .)
    CORDER          reduce using rule 5 (empty -> .)

    empty                          shift and go to state 85
    expresiones                    shift and go to state 87

state 50

    (36) expresion -> expresion_unaria .

    PARDER          reduce using rule 36 (expresion -> expresion_unaria .)
    PTCOMA          reduce using rule 36 (expresion -> expresion_unaria .)
    CORDER          reduce using rule 36 (expresion -> expresion_unaria .)


state 51

    (57) expresion_unaria -> MENOS . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 96

state 52

    (60) expresion_unaria -> ANDBB . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 97

state 53

    (58) expresion_unaria -> NOT . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 98

state 54

    (33) unset_instr -> UNSET PARIZQ tipo_variable . PARDER PTCOMA

    PARDER          shift and go to state 99


state 55

    (32) goto_instr -> GOTO ID PTCOMA .

    error           reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    PRINT           reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    UNSET           reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    EXIT            reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    ID              reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    IF              reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    TEMPVAR         reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    PARAM           reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    FUNVAL          reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    RA              reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    STACK           reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    SP              reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)
    $end            reduce using rule 32 (goto_instr -> GOTO ID PTCOMA .)


state 56

    (3) instrucciones -> instruccion instrucciones .

    $end            reduce using rule 3 (instrucciones -> instruccion instrucciones .)


state 57

    (16) lista_asignaciones -> IGUAL asignacion_valor .

    error           reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    PRINT           reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    GOTO            reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    UNSET           reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    EXIT            reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    ID              reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    IF              reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    TEMPVAR         reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    PARAM           reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    FUNVAL          reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    RA              reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    STACK           reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    SP              reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)
    $end            reduce using rule 16 (lista_asignaciones -> IGUAL asignacion_valor .)


state 58

    (18) asignacion_valor -> expresion . PTCOMA

    PTCOMA          shift and go to state 100


state 59

    (19) asignacion_valor -> ARRAY . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 101


state 60

    (20) asignacion_arr_st -> def_par lista_parametros . IGUAL expresion PTCOMA
    (21) asignacion_arr_st -> def_par lista_parametros . error PTCOMA

    IGUAL           shift and go to state 103
    error           shift and go to state 102


state 61

    (22) lista_parametros -> def_par . lista_parametros
    (22) lista_parametros -> . def_par lista_parametros
    (23) lista_parametros -> .
    (24) def_par -> . CORIZQ expresion CORDER

    IGUAL           reduce using rule 23 (lista_parametros -> .)
    error           reduce using rule 23 (lista_parametros -> .)
    PARDER          reduce using rule 23 (lista_parametros -> .)
    MAS             reduce using rule 23 (lista_parametros -> .)
    MENOS           reduce using rule 23 (lista_parametros -> .)
    MULTI           reduce using rule 23 (lista_parametros -> .)
    DIVISION        reduce using rule 23 (lista_parametros -> .)
    RESIDUO         reduce using rule 23 (lista_parametros -> .)
    IGUALQUE        reduce using rule 23 (lista_parametros -> .)
    DISTINTO        reduce using rule 23 (lista_parametros -> .)
    MAYORIG         reduce using rule 23 (lista_parametros -> .)
    MENORIG         reduce using rule 23 (lista_parametros -> .)
    MAYORQUE        reduce using rule 23 (lista_parametros -> .)
    MENORQUE        reduce using rule 23 (lista_parametros -> .)
    AND             reduce using rule 23 (lista_parametros -> .)
    OR              reduce using rule 23 (lista_parametros -> .)
    XOR             reduce using rule 23 (lista_parametros -> .)
    ANDBB           reduce using rule 23 (lista_parametros -> .)
    ORBB            reduce using rule 23 (lista_parametros -> .)
    XORBB           reduce using rule 23 (lista_parametros -> .)
    SHIFTIZQ        reduce using rule 23 (lista_parametros -> .)
    SHIFTDER        reduce using rule 23 (lista_parametros -> .)
    PTCOMA          reduce using rule 23 (lista_parametros -> .)
    CORDER          reduce using rule 23 (lista_parametros -> .)
    CORIZQ          shift and go to state 36

    def_par                        shift and go to state 61
    lista_parametros               shift and go to state 104

state 62

    (24) def_par -> CORIZQ expresion . CORDER

    CORDER          shift and go to state 105


state 63

    (73) valor -> ABS PARIZQ . expresion PARDER
    (35) expresion -> . valor expresiones
    (36) expresion -> . expresion_unaria
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (57) expresion_unaria -> . MENOS valor
    (58) expresion_unaria -> . NOT valor
    (59) expresion_unaria -> . NOTBB valor
    (60) expresion_unaria -> . ANDBB valor
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    MENOS           shift and go to state 51
    NOT             shift and go to state 53
    NOTBB           shift and go to state 48
    ANDBB           shift and go to state 52
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    expresion_unaria               shift and go to state 50
    tipo_variable                  shift and go to state 44
    expresion                      shift and go to state 106
    valor                          shift and go to state 49

state 64

    (72) valor -> READ PARIZQ . PARDER

    PARDER          shift and go to state 107


state 65

    (62) tipo -> INT .

    PARDER          reduce using rule 62 (tipo -> INT .)


state 66

    (61) valor -> PARIZQ tipo . PARDER valor

    PARDER          shift and go to state 108


state 67

    (63) tipo -> FLOAT .

    PARDER          reduce using rule 63 (tipo -> FLOAT .)


state 68

    (64) tipo -> CHAR .

    PARDER          reduce using rule 64 (tipo -> CHAR .)


state 69

    (69) valor -> tipo_variable paramsaccess .

    MAS             reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    MENOS           reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    MULTI           reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    DIVISION        reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    RESIDUO         reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    IGUALQUE        reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    DISTINTO        reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    MAYORIG         reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    MENORIG         reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    MAYORQUE        reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    MENORQUE        reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    AND             reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    OR              reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    XOR             reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    ANDBB           reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    ORBB            reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    XORBB           reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    SHIFTIZQ        reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    SHIFTDER        reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    CORDER          reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    PARDER          reduce using rule 69 (valor -> tipo_variable paramsaccess .)
    PTCOMA          reduce using rule 69 (valor -> tipo_variable paramsaccess .)


state 70

    (70) paramsaccess -> empty .

    PARDER          reduce using rule 70 (paramsaccess -> empty .)
    MAS             reduce using rule 70 (paramsaccess -> empty .)
    MENOS           reduce using rule 70 (paramsaccess -> empty .)
    MULTI           reduce using rule 70 (paramsaccess -> empty .)
    DIVISION        reduce using rule 70 (paramsaccess -> empty .)
    RESIDUO         reduce using rule 70 (paramsaccess -> empty .)
    IGUALQUE        reduce using rule 70 (paramsaccess -> empty .)
    DISTINTO        reduce using rule 70 (paramsaccess -> empty .)
    MAYORIG         reduce using rule 70 (paramsaccess -> empty .)
    MENORIG         reduce using rule 70 (paramsaccess -> empty .)
    MAYORQUE        reduce using rule 70 (paramsaccess -> empty .)
    MENORQUE        reduce using rule 70 (paramsaccess -> empty .)
    AND             reduce using rule 70 (paramsaccess -> empty .)
    OR              reduce using rule 70 (paramsaccess -> empty .)
    XOR             reduce using rule 70 (paramsaccess -> empty .)
    ANDBB           reduce using rule 70 (paramsaccess -> empty .)
    ORBB            reduce using rule 70 (paramsaccess -> empty .)
    XORBB           reduce using rule 70 (paramsaccess -> empty .)
    SHIFTIZQ        reduce using rule 70 (paramsaccess -> empty .)
    SHIFTDER        reduce using rule 70 (paramsaccess -> empty .)
    PTCOMA          reduce using rule 70 (paramsaccess -> empty .)
    CORDER          reduce using rule 70 (paramsaccess -> empty .)


state 71

    (71) paramsaccess -> def_par . lista_parametros
    (22) lista_parametros -> . def_par lista_parametros
    (23) lista_parametros -> .
    (24) def_par -> . CORIZQ expresion CORDER

    PARDER          reduce using rule 23 (lista_parametros -> .)
    MAS             reduce using rule 23 (lista_parametros -> .)
    MENOS           reduce using rule 23 (lista_parametros -> .)
    MULTI           reduce using rule 23 (lista_parametros -> .)
    DIVISION        reduce using rule 23 (lista_parametros -> .)
    RESIDUO         reduce using rule 23 (lista_parametros -> .)
    IGUALQUE        reduce using rule 23 (lista_parametros -> .)
    DISTINTO        reduce using rule 23 (lista_parametros -> .)
    MAYORIG         reduce using rule 23 (lista_parametros -> .)
    MENORIG         reduce using rule 23 (lista_parametros -> .)
    MAYORQUE        reduce using rule 23 (lista_parametros -> .)
    MENORQUE        reduce using rule 23 (lista_parametros -> .)
    AND             reduce using rule 23 (lista_parametros -> .)
    OR              reduce using rule 23 (lista_parametros -> .)
    XOR             reduce using rule 23 (lista_parametros -> .)
    ANDBB           reduce using rule 23 (lista_parametros -> .)
    ORBB            reduce using rule 23 (lista_parametros -> .)
    XORBB           reduce using rule 23 (lista_parametros -> .)
    SHIFTIZQ        reduce using rule 23 (lista_parametros -> .)
    SHIFTDER        reduce using rule 23 (lista_parametros -> .)
    PTCOMA          reduce using rule 23 (lista_parametros -> .)
    CORDER          reduce using rule 23 (lista_parametros -> .)
    CORIZQ          shift and go to state 36

    def_par                        shift and go to state 61
    lista_parametros               shift and go to state 109

state 72

    (31) print_instr -> PRINT PARIZQ valor PARDER . PTCOMA

    PTCOMA          shift and go to state 110


state 73

    (74) if_instr -> IF PARIZQ expresion PARDER . goto_instr
    (32) goto_instr -> . GOTO ID PTCOMA

    GOTO            shift and go to state 16

    goto_instr                     shift and go to state 111

state 74

    (59) expresion_unaria -> NOTBB valor .

    PTCOMA          reduce using rule 59 (expresion_unaria -> NOTBB valor .)
    CORDER          reduce using rule 59 (expresion_unaria -> NOTBB valor .)
    PARDER          reduce using rule 59 (expresion_unaria -> NOTBB valor .)


state 75

    (53) expresiones -> XORBB . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 112

state 76

    (39) expresiones -> MULTI . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 113

state 77

    (41) expresiones -> RESIDUO . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 114

state 78

    (55) expresiones -> SHIFTDER . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 115

state 79

    (48) expresiones -> AND . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 116

state 80

    (43) expresiones -> DISTINTO . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 117

state 81

    (52) expresiones -> ORBB . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 118

state 82

    (37) expresiones -> MAS . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 119

state 83

    (42) expresiones -> IGUALQUE . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 120

state 84

    (54) expresiones -> SHIFTIZQ . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 121

state 85

    (56) expresiones -> empty .

    PARDER          reduce using rule 56 (expresiones -> empty .)
    PTCOMA          reduce using rule 56 (expresiones -> empty .)
    CORDER          reduce using rule 56 (expresiones -> empty .)


state 86

    (46) expresiones -> MAYORQUE . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 122

state 87

    (35) expresion -> valor expresiones .

    PARDER          reduce using rule 35 (expresion -> valor expresiones .)
    PTCOMA          reduce using rule 35 (expresion -> valor expresiones .)
    CORDER          reduce using rule 35 (expresion -> valor expresiones .)


state 88

    (45) expresiones -> MENORIG . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 123

state 89

    (44) expresiones -> MAYORIG . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 124

state 90

    (49) expresiones -> OR . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 125

state 91

    (50) expresiones -> XOR . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 126

state 92

    (38) expresiones -> MENOS . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 127

state 93

    (47) expresiones -> MENORQUE . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 128

state 94

    (51) expresiones -> ANDBB . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 129

state 95

    (40) expresiones -> DIVISION . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 130

state 96

    (57) expresion_unaria -> MENOS valor .

    PTCOMA          reduce using rule 57 (expresion_unaria -> MENOS valor .)
    CORDER          reduce using rule 57 (expresion_unaria -> MENOS valor .)
    PARDER          reduce using rule 57 (expresion_unaria -> MENOS valor .)


state 97

    (60) expresion_unaria -> ANDBB valor .

    PTCOMA          reduce using rule 60 (expresion_unaria -> ANDBB valor .)
    CORDER          reduce using rule 60 (expresion_unaria -> ANDBB valor .)
    PARDER          reduce using rule 60 (expresion_unaria -> ANDBB valor .)


state 98

    (58) expresion_unaria -> NOT valor .

    PTCOMA          reduce using rule 58 (expresion_unaria -> NOT valor .)
    CORDER          reduce using rule 58 (expresion_unaria -> NOT valor .)
    PARDER          reduce using rule 58 (expresion_unaria -> NOT valor .)


state 99

    (33) unset_instr -> UNSET PARIZQ tipo_variable PARDER . PTCOMA

    PTCOMA          shift and go to state 131


state 100

    (18) asignacion_valor -> expresion PTCOMA .

    error           reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    PRINT           reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    GOTO            reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    UNSET           reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    EXIT            reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    ID              reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    IF              reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    TEMPVAR         reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    PARAM           reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    FUNVAL          reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    RA              reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    STACK           reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    SP              reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)
    $end            reduce using rule 18 (asignacion_valor -> expresion PTCOMA .)


state 101

    (19) asignacion_valor -> ARRAY PARIZQ . PARDER PTCOMA

    PARDER          shift and go to state 132


state 102

    (21) asignacion_arr_st -> def_par lista_parametros error . PTCOMA

    PTCOMA          shift and go to state 133


state 103

    (20) asignacion_arr_st -> def_par lista_parametros IGUAL . expresion PTCOMA
    (35) expresion -> . valor expresiones
    (36) expresion -> . expresion_unaria
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (57) expresion_unaria -> . MENOS valor
    (58) expresion_unaria -> . NOT valor
    (59) expresion_unaria -> . NOTBB valor
    (60) expresion_unaria -> . ANDBB valor
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    MENOS           shift and go to state 51
    NOT             shift and go to state 53
    NOTBB           shift and go to state 48
    ANDBB           shift and go to state 52
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    expresion_unaria               shift and go to state 50
    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 49
    expresion                      shift and go to state 134

state 104

    (22) lista_parametros -> def_par lista_parametros .

    IGUAL           reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    error           reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    PARDER          reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    MAS             reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    MENOS           reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    MULTI           reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    DIVISION        reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    RESIDUO         reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    IGUALQUE        reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    DISTINTO        reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    MAYORIG         reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    MENORIG         reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    MAYORQUE        reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    MENORQUE        reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    AND             reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    OR              reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    XOR             reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    ANDBB           reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    ORBB            reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    XORBB           reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    SHIFTIZQ        reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    SHIFTDER        reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    PTCOMA          reduce using rule 22 (lista_parametros -> def_par lista_parametros .)
    CORDER          reduce using rule 22 (lista_parametros -> def_par lista_parametros .)


state 105

    (24) def_par -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    error           reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    MULTI           reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    DIVISION        reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    RESIDUO         reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    IGUALQUE        reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    DISTINTO        reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    MAYORIG         reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    MENORIG         reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    MAYORQUE        reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    MENORQUE        reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    AND             reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    OR              reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    XOR             reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    ANDBB           reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    ORBB            reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    XORBB           reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    SHIFTIZQ        reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    SHIFTDER        reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 24 (def_par -> CORIZQ expresion CORDER .)


state 106

    (73) valor -> ABS PARIZQ expresion . PARDER

    PARDER          shift and go to state 135


state 107

    (72) valor -> READ PARIZQ PARDER .

    MAS             reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    MENOS           reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    MULTI           reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    DIVISION        reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    RESIDUO         reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    IGUALQUE        reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    DISTINTO        reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    MAYORIG         reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    MENORIG         reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    MAYORQUE        reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    MENORQUE        reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    AND             reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    OR              reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    XOR             reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    ANDBB           reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    ORBB            reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    XORBB           reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    SHIFTIZQ        reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    SHIFTDER        reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    CORDER          reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    PARDER          reduce using rule 72 (valor -> READ PARIZQ PARDER .)
    PTCOMA          reduce using rule 72 (valor -> READ PARIZQ PARDER .)


state 108

    (61) valor -> PARIZQ tipo PARDER . valor
    (61) valor -> . PARIZQ tipo PARDER valor
    (65) valor -> . ENTERO
    (66) valor -> . DECIMAL
    (67) valor -> . CADENA
    (68) valor -> . CADENADOBLE
    (69) valor -> . tipo_variable paramsaccess
    (72) valor -> . READ PARIZQ PARDER
    (73) valor -> . ABS PARIZQ expresion PARDER
    (25) tipo_variable -> . TEMPVAR
    (26) tipo_variable -> . PARAM
    (27) tipo_variable -> . FUNVAL
    (28) tipo_variable -> . RA
    (29) tipo_variable -> . STACK
    (30) tipo_variable -> . SP

    PARIZQ          shift and go to state 43
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 40
    CADENA          shift and go to state 45
    CADENADOBLE     shift and go to state 39
    READ            shift and go to state 42
    ABS             shift and go to state 38
    TEMPVAR         shift and go to state 12
    PARAM           shift and go to state 6
    FUNVAL          shift and go to state 1
    RA              shift and go to state 3
    STACK           shift and go to state 21
    SP              shift and go to state 2

    tipo_variable                  shift and go to state 44
    valor                          shift and go to state 136

state 109

    (71) paramsaccess -> def_par lista_parametros .

    PARDER          reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    MAS             reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    MENOS           reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    MULTI           reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    DIVISION        reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    RESIDUO         reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    IGUALQUE        reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    DISTINTO        reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    MAYORIG         reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    MENORIG         reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    MAYORQUE        reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    MENORQUE        reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    AND             reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    OR              reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    XOR             reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    ANDBB           reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    ORBB            reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    XORBB           reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    SHIFTIZQ        reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    SHIFTDER        reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    PTCOMA          reduce using rule 71 (paramsaccess -> def_par lista_parametros .)
    CORDER          reduce using rule 71 (paramsaccess -> def_par lista_parametros .)


state 110

    (31) print_instr -> PRINT PARIZQ valor PARDER PTCOMA .

    error           reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    PRINT           reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    GOTO            reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    UNSET           reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    EXIT            reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    ID              reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    IF              reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    TEMPVAR         reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    PARAM           reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    FUNVAL          reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    RA              reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    STACK           reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    SP              reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)
    $end            reduce using rule 31 (print_instr -> PRINT PARIZQ valor PARDER PTCOMA .)


state 111

    (74) if_instr -> IF PARIZQ expresion PARDER goto_instr .

    error           reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    PRINT           reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    GOTO            reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    UNSET           reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    EXIT            reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    ID              reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    IF              reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    TEMPVAR         reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    PARAM           reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    FUNVAL          reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    RA              reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    STACK           reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    SP              reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)
    $end            reduce using rule 74 (if_instr -> IF PARIZQ expresion PARDER goto_instr .)


state 112

    (53) expresiones -> XORBB valor .

    PARDER          reduce using rule 53 (expresiones -> XORBB valor .)
    PTCOMA          reduce using rule 53 (expresiones -> XORBB valor .)
    CORDER          reduce using rule 53 (expresiones -> XORBB valor .)


state 113

    (39) expresiones -> MULTI valor .

    PARDER          reduce using rule 39 (expresiones -> MULTI valor .)
    PTCOMA          reduce using rule 39 (expresiones -> MULTI valor .)
    CORDER          reduce using rule 39 (expresiones -> MULTI valor .)


state 114

    (41) expresiones -> RESIDUO valor .

    PARDER          reduce using rule 41 (expresiones -> RESIDUO valor .)
    PTCOMA          reduce using rule 41 (expresiones -> RESIDUO valor .)
    CORDER          reduce using rule 41 (expresiones -> RESIDUO valor .)


state 115

    (55) expresiones -> SHIFTDER valor .

    PARDER          reduce using rule 55 (expresiones -> SHIFTDER valor .)
    PTCOMA          reduce using rule 55 (expresiones -> SHIFTDER valor .)
    CORDER          reduce using rule 55 (expresiones -> SHIFTDER valor .)


state 116

    (48) expresiones -> AND valor .

    PARDER          reduce using rule 48 (expresiones -> AND valor .)
    PTCOMA          reduce using rule 48 (expresiones -> AND valor .)
    CORDER          reduce using rule 48 (expresiones -> AND valor .)


state 117

    (43) expresiones -> DISTINTO valor .

    PARDER          reduce using rule 43 (expresiones -> DISTINTO valor .)
    PTCOMA          reduce using rule 43 (expresiones -> DISTINTO valor .)
    CORDER          reduce using rule 43 (expresiones -> DISTINTO valor .)


state 118

    (52) expresiones -> ORBB valor .

    PARDER          reduce using rule 52 (expresiones -> ORBB valor .)
    PTCOMA          reduce using rule 52 (expresiones -> ORBB valor .)
    CORDER          reduce using rule 52 (expresiones -> ORBB valor .)


state 119

    (37) expresiones -> MAS valor .

    PARDER          reduce using rule 37 (expresiones -> MAS valor .)
    PTCOMA          reduce using rule 37 (expresiones -> MAS valor .)
    CORDER          reduce using rule 37 (expresiones -> MAS valor .)


state 120

    (42) expresiones -> IGUALQUE valor .

    PARDER          reduce using rule 42 (expresiones -> IGUALQUE valor .)
    PTCOMA          reduce using rule 42 (expresiones -> IGUALQUE valor .)
    CORDER          reduce using rule 42 (expresiones -> IGUALQUE valor .)


state 121

    (54) expresiones -> SHIFTIZQ valor .

    PARDER          reduce using rule 54 (expresiones -> SHIFTIZQ valor .)
    PTCOMA          reduce using rule 54 (expresiones -> SHIFTIZQ valor .)
    CORDER          reduce using rule 54 (expresiones -> SHIFTIZQ valor .)


state 122

    (46) expresiones -> MAYORQUE valor .

    PARDER          reduce using rule 46 (expresiones -> MAYORQUE valor .)
    PTCOMA          reduce using rule 46 (expresiones -> MAYORQUE valor .)
    CORDER          reduce using rule 46 (expresiones -> MAYORQUE valor .)


state 123

    (45) expresiones -> MENORIG valor .

    PARDER          reduce using rule 45 (expresiones -> MENORIG valor .)
    PTCOMA          reduce using rule 45 (expresiones -> MENORIG valor .)
    CORDER          reduce using rule 45 (expresiones -> MENORIG valor .)


state 124

    (44) expresiones -> MAYORIG valor .

    PARDER          reduce using rule 44 (expresiones -> MAYORIG valor .)
    PTCOMA          reduce using rule 44 (expresiones -> MAYORIG valor .)
    CORDER          reduce using rule 44 (expresiones -> MAYORIG valor .)


state 125

    (49) expresiones -> OR valor .

    PARDER          reduce using rule 49 (expresiones -> OR valor .)
    PTCOMA          reduce using rule 49 (expresiones -> OR valor .)
    CORDER          reduce using rule 49 (expresiones -> OR valor .)


state 126

    (50) expresiones -> XOR valor .

    PARDER          reduce using rule 50 (expresiones -> XOR valor .)
    PTCOMA          reduce using rule 50 (expresiones -> XOR valor .)
    CORDER          reduce using rule 50 (expresiones -> XOR valor .)


state 127

    (38) expresiones -> MENOS valor .

    PARDER          reduce using rule 38 (expresiones -> MENOS valor .)
    PTCOMA          reduce using rule 38 (expresiones -> MENOS valor .)
    CORDER          reduce using rule 38 (expresiones -> MENOS valor .)


state 128

    (47) expresiones -> MENORQUE valor .

    PARDER          reduce using rule 47 (expresiones -> MENORQUE valor .)
    PTCOMA          reduce using rule 47 (expresiones -> MENORQUE valor .)
    CORDER          reduce using rule 47 (expresiones -> MENORQUE valor .)


state 129

    (51) expresiones -> ANDBB valor .

    PARDER          reduce using rule 51 (expresiones -> ANDBB valor .)
    PTCOMA          reduce using rule 51 (expresiones -> ANDBB valor .)
    CORDER          reduce using rule 51 (expresiones -> ANDBB valor .)


state 130

    (40) expresiones -> DIVISION valor .

    PARDER          reduce using rule 40 (expresiones -> DIVISION valor .)
    PTCOMA          reduce using rule 40 (expresiones -> DIVISION valor .)
    CORDER          reduce using rule 40 (expresiones -> DIVISION valor .)


state 131

    (33) unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .

    error           reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    PRINT           reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    GOTO            reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    UNSET           reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    EXIT            reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    ID              reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    IF              reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    TEMPVAR         reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    PARAM           reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    FUNVAL          reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    RA              reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    STACK           reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    SP              reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)
    $end            reduce using rule 33 (unset_instr -> UNSET PARIZQ tipo_variable PARDER PTCOMA .)


state 132

    (19) asignacion_valor -> ARRAY PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 137


state 133

    (21) asignacion_arr_st -> def_par lista_parametros error PTCOMA .

    error           reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    PRINT           reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    GOTO            reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    UNSET           reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    EXIT            reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    ID              reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    IF              reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    TEMPVAR         reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    PARAM           reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    FUNVAL          reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    RA              reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    STACK           reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    SP              reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)
    $end            reduce using rule 21 (asignacion_arr_st -> def_par lista_parametros error PTCOMA .)


state 134

    (20) asignacion_arr_st -> def_par lista_parametros IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 138


state 135

    (73) valor -> ABS PARIZQ expresion PARDER .

    MAS             reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    MENOS           reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    MULTI           reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    DIVISION        reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    RESIDUO         reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    MAYORIG         reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    MENORIG         reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    MAYORQUE        reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    MENORQUE        reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    AND             reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    OR              reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    XOR             reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    ANDBB           reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    ORBB            reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    XORBB           reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    SHIFTIZQ        reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    SHIFTDER        reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    CORDER          reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    PARDER          reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 73 (valor -> ABS PARIZQ expresion PARDER .)


state 136

    (61) valor -> PARIZQ tipo PARDER valor .

    MAS             reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    MENOS           reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    MULTI           reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    DIVISION        reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    RESIDUO         reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    IGUALQUE        reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    DISTINTO        reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    MAYORIG         reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    MENORIG         reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    MAYORQUE        reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    MENORQUE        reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    AND             reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    OR              reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    XOR             reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    ANDBB           reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    ORBB            reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    XORBB           reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    SHIFTIZQ        reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    SHIFTDER        reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    CORDER          reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    PARDER          reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)
    PTCOMA          reduce using rule 61 (valor -> PARIZQ tipo PARDER valor .)


state 137

    (19) asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .

    error           reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    PRINT           reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    GOTO            reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    UNSET           reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    EXIT            reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    IF              reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    TEMPVAR         reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    PARAM           reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    FUNVAL          reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    RA              reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    STACK           reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    SP              reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 19 (asignacion_valor -> ARRAY PARIZQ PARDER PTCOMA .)


state 138

    (20) asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .

    error           reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    PRINT           reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    GOTO            reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    UNSET           reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    EXIT            reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    ID              reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    IF              reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    TEMPVAR         reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    PARAM           reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    FUNVAL          reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    RA              reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    STACK           reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    SP              reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)
    $end            reduce using rule 20 (asignacion_arr_st -> def_par lista_parametros IGUAL expresion PTCOMA .)

